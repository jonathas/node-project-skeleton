
server {
	listen 80 default_server;
	listen [::]:80 default_server;

	server_name _;
    add_header X-Server-Name $hostname;
    
    return 301 https://$host$request_uri;
}

server {
	listen 443 ssl http2;
	listen [::]:443 ssl http2;

	server_name _;
	
	# Hide headers for improved security
	server_tokens off;
	#more_clear_headers "Server";
	#more_clear_headers X-Powered-By;
    	
	# support only known-secure cryptographic protocols
	# SSLv3 is broken by POODLE as of October 2014
	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	
	# make the server choose the best cipher instead of the browser
	# Perfect Forward Secrecy(PFS) is frequently compromised without this
	ssl_prefer_server_ciphers on;
	
	# support only believed secure ciphersuites using the following priority:
	# 1.) prefer PFS enabled ciphers
	# 2.) prefer AES128 over AES256 for speed (AES128 has completely adequate security for now)
	# 3.) Support DES3 for IE8 support
	#
	# disable the following ciphersuites completely
	# 1.) null ciphers
	# 2.) ciphers with low security
	# 3.) fixed ECDH cipher (does not allow for PFS)
	# 4.) known vulnerable cypers (MD5, RC4, etc)
	# 5.) little-used ciphers (Camellia, Seed)
	ssl_ciphers 'kEECDH+ECDSA+AES128 kEECDH+ECDSA+AES256 kEECDH+AES128 kEECDH+AES256 kEDH+AES128 kEDH+AES256 DES-CBC3-SHA +SHA !aNULL !eNULL !LOW !kECDH !DSS !MD5 !EXP !PSK !SRP !CAMELLIA !SEED';

	# Use 2048 bit Diffie-Hellman RSA key parameters
	# (otherwise Nginx defaults to 1024 bit, lowering the strength of encryption # when using PFS)
	# Generated by OpenSSL with the following command:
	# openssl dhparam -outform pem -out /etc/ssl/certs/dhparam2048.pem 2048
	ssl_dhparam /etc/ssl/private/dhparam2048.pem;
	
    # CORS
	add_header 'Access-Control-Allow-Origin' '*';

	# enable HSTS including subdomains
	# add_header Strict-Transport-Security 'max-age=63072000; includeSubDomains; preload';
	
	add_header X-Content-Type-Options nosniff;
	add_header X-DNS-Prefetch-Control off;
	add_header X-Download-Options noopen;
	add_header X-Frame-Options SAMEORIGIN;
	add_header X-XSS-Protection '1; mode=block';
    add_header X-Server-Name $hostname;
	
	# allow Nginx to send OCSP results during the connection process
	ssl_stapling on;

	# Self signed certs
	# Don't use them in a production server!
	ssl_certificate /etc/ssl/private/test/server.crt;
	ssl_certificate_key /etc/ssl/private/test/server.key;

	# ssl_certificate /etc/ssl/private/bundle.crt;
	# ssl_certificate_key /etc/ssl/private/certificate.key;

    location /api/v1 {
        include includes/proxy.conf;
        proxy_pass http://127.0.0.1:3000;
    }
	
	location ~ (\.env) {
    	return 404;
	}
	location /maps/ {
		return 404;
	}

}
